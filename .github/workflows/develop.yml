name: .NET Core Build and Release

on:
  push:
    branches:
      - develop
# CONFIGURATION
# For help, go to https://github.com/Azure/Actions
#
# 1. Set up the following secrets in your repository:
#   AZURE_WEBAPP_PUBLISH_PROFILE
#
# 2. Change these variables for your configuration:
env:
  AZURE_WEBAPP_NAME: test-slaytonnichols # set this to your application's name
  AZURE_WEBAPP_PACKAGE_PATH: "." # set this to the path to your web app project, defaults to the repository root

jobs:
  release:
    name: Build and Release
    runs-on: windows-latest
    steps:
      # Setup .NET Core SDK
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
      - name: Checkout code
        uses: actions/checkout@v2
        # Checkout the repo
      - name: Checkout
        uses: actions/checkout@v2
      - name: Fetch all history for all tags and branches
        run: git fetch --prune --unshallow
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.2
        with:
          versionSpec: "5.2.x"
      - name: Exec GitVersion'
        uses: gittools/actions/gitversion/execute@v0.9.2
      - name: Build
        id: build
        run: |
          GitVersion
          dotnet build ".\Blogifier\Blogifier.sln" --configuration Release
          dotnet publish ".\Blogifier\Blogifier.sln" -c Release -o '${{ env.AZURE_WEBAPP_PACKAGE_PATH }}/blog'
      - name: Artifact
        uses: actions/upload-artifact@v2
        with:
          name: blog
          path: /blog
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "${{ steps.build.outputs.commitDate }}-${{ steps.build.outputs.semVer }}"
          release_name: "${{ steps.build.outputs.commitDate }}-${{ steps.build.outputs.semVer }}"
          draft: false
          prerelease: true
      # - name: Upload Release Asset
      #   id: upload-release-asset
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
      #     asset_path: "${{ env.AZURE_WEBAPP_PACKAGE_PATH }}/blog"
      #     asset_name: blog
      #     asset_content_type: application/zip

      # Deploy to Azure Web apps
      - name: "Run Azure webapp deploy action using publish profile credentials"
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }} # Replace with your app name
          publish-profile: ${{ secrets.TEST_AZURE_WEBAPP_PUBLISH_PROFILE  }} # Define secret variable in repository settings as per action documentation
          package: "${{ env.AZURE_WEBAPP_PACKAGE_PATH }}/blog"
# For more samples to get started with GitHub Action workflows to deploy to Azure, refer to https://github.com/Azure/actions-workflow-samples
