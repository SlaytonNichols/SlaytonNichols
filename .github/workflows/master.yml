name: .NET Core Build and Release

on:
  push:
    branches:
      - master
# CONFIGURATION
# For help, go to https://github.com/Azure/Actions
#
# 1. Set up the following secrets in your repository:
#   AZURE_WEBAPP_PUBLISH_PROFILE
#
# 2. Change these variables for your configuration:
env:
  AZURE_WEBAPP_NAME: slaytonnichols    # set this to your application's name
  AZURE_WEBAPP_PACKAGE_PATH: '.'      # set this to the path to your web app project, defaults to the repository root

jobs:        
  release:  
    name: Create Release
    runs-on: windows-latest
    steps:
      # Setup .NET Core SDK
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1         
      - name: Checkout code
        uses: actions/checkout@v2
        # Checkout the repo
      - uses: actions/checkout@master
      - name: Build project
        run: |
          dotnet build ".\Blogifier\Blogifier.sln" --configuration Release
          dotnet publish ".\Blogifier\Blogifier.sln" -c Release -o '${{ env.AZURE_WEBAPP_PACKAGE_PATH }}/blog'          
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{github.ref}}      
          release_name: ${{github.ref}}  
          draft: false
          prerelease: false
#       - name: Upload Release Asset
#         id: upload-release-asset 
#         uses: actions/upload-release-asset@v1
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#         with:
#           upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
#           asset_path: '${{ env.AZURE_WEBAPP_PACKAGE_PATH }}/blog' 
#           asset_name: blog   
#           asset_content_type: application/zip  
          
        # Deploy to Azure Web apps
      - name: 'Run Azure webapp deploy action using publish profile credentials'
        uses: azure/webapps-deploy@v2
        with: 
          app-name: ${{ env.AZURE_WEBAPP_NAME }} # Replace with your app name
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE  }} # Define secret variable in repository settings as per action documentation
          package: '${{ env.TEST_AZURE_WEBAPP_PACKAGE_PATH }}/blog'  

# For more samples to get started with GitHub Action workflows to deploy to Azure, refer to https://github.com/Azure/actions-workflow-samples
