name: .NET Core Build and Release Master

on:
  push:
    branches:
      - master
# CONFIGURATION
# For help, go to https://github.com/Azure/Actions
#
# 1. Set up the following secrets in your repository:
#   AZURE_WEBAPP_PUBLISH_PROFILE
#
# 2. Change these variables for your configuration:
env:
  AZURE_WEBAPP_NAME: slaytonnichols # set this to your application's name
  AZURE_WEBAPP_PACKAGE_PATH: "." # set this to the path to your web app project, defaults to the repository root

jobs:
  release:
    name: Create Release
    runs-on: windows-latest
    steps:
      # Setup .NET Core SDK
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        # Checkout the repo
      - name: Checkout
        uses: actions/checkout@master
      - name: Fetch all history for all tags and branches
        run: git fetch --prune --unshallow
        - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.2
        with:
          versionSpec: "5.2.x"
      - name: Exec GitVersion'
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.9.2
      - name: Build
        id: build
        run: |
          GitVersion
          dotnet build ".\Blogifier\Blogifier.sln" --configuration Release
          dotnet publish ".\Blogifier\Blogifier.sln" -c Release /p:AssemblyVersion=${{ steps.gitversion.outputs.assemblySemFileVer }} /p:FileVersion=${{ steps.gitversion.outputs.assemblySemFileVer }} /p:InformationalVersion=${{ steps.gitversion.outputs.Sha }} -o '${{ env.AZURE_WEBAPP_PACKAGE_PATH }}/blog'
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "v${{ steps.gitversion.outputs.commitDate }}-${{ steps.gitversion.outputs.semVer }}"
          release_name: "v${{ steps.gitversion.outputs.commitDate }}-${{ steps.gitversion.outputs.semVer }}"
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./
          asset_name: "blog.zip"
          asset_content_type: application/zip
      - name: Create Download Asset
        run: |
          echo "${{ steps.upload-release-asset.outputs.browser_download_url }}" >> blog-asset-download.txt
      - name: Artifact Download Asset
        uses: actions/upload-artifact@v2
        with:
          name: blog-asset-download
          path: ./blog-asset-download.txt
