name: Build and Deploy

on:
  push:
    branches:
      - develop
      - master
jobs:
  build:
    name: Build and Release
    runs-on: windows-latest
    steps:
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
      - name: Checkout
        uses: actions/checkout@v2
      - name: Fetch all history for all tags and branches
        run: |
          git fetch --prune --unshallow
          git config remote.origin.url https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }} 
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.2
        with:
          versionSpec: "5.2.x"
      - name: Exec GitVersion
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.9.2
      - name: Build
        id: build
        run: |
          GitVersion /updateassemblyinfo
          dotnet build ".\Blogifier\Blogifier.sln" --configuration Release /p:AssemblyVersion=${{ steps.gitversion.outputs.assemblySemFileVer }} /p:FileVersion=${{ steps.gitversion.outputs.assemblySemFileVer }} /p:InformationalVersion=${{ steps.gitversion.outputs.Sha }}
          dotnet publish ".\Blogifier\Blogifier.sln" -c Release /p:AssemblyVersion=${{ steps.gitversion.outputs.assemblySemFileVer }} /p:FileVersion=${{ steps.gitversion.outputs.assemblySemFileVer }} /p:InformationalVersion=${{ steps.gitversion.outputs.Sha }} -o './blog'
      - name: Set Env Vars
        shell: bash
        run: |
          echo "v${{ steps.gitversion.outputs.commitDate }}-${{ steps.gitversion.outputs.semVer }}" > ./version.txt
          echo "::set-env name=RELEASE_VERSION::v${{ steps.gitversion.outputs.commitDate }}-${{ steps.gitversion.outputs.semVer }}"
      - name: Upload Artifact
        uses: actions/upload-artifact@v1
        with:
          name: artifact
          path: ./
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "${{ env.RELEASE_VERSION }}"
          release_name: "${{ env.RELEASE_VERSION }}"
          draft: false
          prerelease: false
  deploy-develop:
    if: github.event_name == 'push' && github.ref == 'refs/heads/develop'
    needs: build
    runs-on: windows-latest
    steps:            
      - name: Download Artifact
        id: develop-version
        uses: actions/download-artifact@v2
        with:
          name: artifact
          path: ./        
      - name: Deploy
        uses: azure/webapps-deploy@v2
        with:
          app-name: test-slaytonnichols
          publish-profile: ${{ secrets.TEST_AZURE_WEBAPP_PUBLISH_PROFILE  }}
          package: ./blog
  deploy-master:
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    needs: build
    runs-on: windows-latest
    steps:            
      - name: Download Artifact
        id: master-version
        uses: actions/download-artifact@v2
        with:
          name: artifact
          path: ./
      - name: Deploy
        uses: azure/webapps-deploy@v2
        with:
          app-name: slaytonnichols
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE  }}
          package: ./blog
